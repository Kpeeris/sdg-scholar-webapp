// rules_version = '2';

// service cloud.firestore {

//   match /databases/{database}/documents {

// 		// Function to check if someone is authenticated
//   	function isAuthenticated() {
//       return request.auth != null;
//     }
    
//     // Function to check if someone is an admin
//     function isAdmin() {
//     	return isAuthenticated() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
//     }

//     // Admin Codes Collection (read-only for code verification in sign up)
// 		match /config/adminCodes {
//     	allow read: if true; 
//       allow write: if false;
//     }
    
//     // Admins collection (only admins can update their own data)
//     match /admins/{adminId} {
//       allow create, read: if isAuthenticated();
//       allow update: if isAdmin();
//     }

//     // Learners collection (only learners can update their own data)
//     match /learners/{learnerId} {
//     	allow create, read: if isAuthenticated();
//       allow update: if isAuthenticated() && exists(/databases/$(database)/documents/learners/$(request.auth.uid));
//     }
    
//      // Announcements collection (admins can read/write, learners can only read)
//     match /announcements/{announcementId} {
//       allow read: if isAuthenticated(); 
//       allow write: if isAdmin(); 
//     }
    
//     // Quizzes collection (admins can read/write, learners can only read)
//     match /quizzes/{quizId}/{document=**} {
//       allow read: if isAuthenticated(); 
//       allow write: if isAdmin();
//     }
//   }
// }

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    
    match /{document=**} {
      allow read, write: if true;
    }
    
    match /config/adminCodes {
    	allow read: if true; // Make sure this is set to allow reads (adjust to your needs)
    }

  }
}